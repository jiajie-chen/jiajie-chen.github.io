---
import { type CollectionEntry, getCollection } from 'astro:content'
import FormattedDate from '@components/FormattedDate.astro'
import BaseLayout from '@layouts/BaseLayout.astro'

/**
 * Generates SSG paths for blog posts.
 * @returns Astro paths to all blog posts in the collection.
 */
export async function getStaticPaths() {
    const posts = await getCollection('blog')
    return posts.map((post) => ({
        params: { slug: post.slug },
        props: post,
    }))
}
type Props = CollectionEntry<'blog'>

const post = Astro.props
const { Content } = await post.render()
const { title, description, pubDate, updatedDate, heroImage } = post.data
---

<BaseLayout
    baseHeadProps={{ title, description, image: heroImage }}
    headerProps={{ title, headerImage: heroImage }}>
    <article class="prose">
        <FormattedDate date={pubDate} />
        {
            updatedDate && (
                <div class="last-updated-on">
                    Last updated on <FormattedDate date={updatedDate} />
                </div>
            )
        }
        <hr />
        <Content />
    </article>
</BaseLayout>
